extends layout

block headaddon
  link(rel='stylesheet', href='/css/bootstrap-tagsinput.css')
  link(rel='stylesheet', href='/css/typeaheadjs.css')

  script(src="/js/bootstrap-tagsinput.js")
  script(src="/js/typeahead.bundle.min.js")
  script(src="/js/jquery.ui.monthpicker.js")

block content
  -data = data || {}

  div.row
    if errors
      ul.my-errors
        for error in errors
          li= error.msg
  
  div.row
    form(action=action_url method="POST" class="form-registration")
      div.col-sm
        if edit
          h1 עריכת עסקה
        else
          h1 הוספת עסקה

        div.btn-group.btn-group-toggle(data-toggle="buttons")
          label.btn.btn-secondary.active הוצאה
            input(type="radio", id="is_outcome_yes", name="is_outcome", value="true", autocomplete="off", checked)
          label.btn.btn-secondary הכנסה
            input(type="radio", id="is_outcome_no", name="is_outcome", value="false", autocomplete="off")
        
        script.
          function toggleIsOutcome(is_outcome) {
            if (is_outcome) {
              $("#is_outcome_yes").click();
            } else {
              $("#is_outcome_no").click();
            }
          }

        br
        br

        label(for="type") סוג העסקה:
        input(
          type="text"
          id="type"
          name="type"
          class="form-control"
          value=(data._transaction_type ? data._transaction_type.title : "")
        )

        script.
          var types_source = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('text'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            remote: {
              url: '/ajax/trans_types/%QUERY',
              wildcard: '%QUERY'
            }
          });
          types_source.initialize();
          
          $('#type').typeahead(null, {
            name: 'types_source',
            displayKey: function(types) {
              return types.title;
            },
            source: types_source.ttAdapter()
          });
          
          $('#type').on('typeahead:selected', function(evt, item) {
              addItemToTags(item._transaction_tag);
              toggleIsOutcome(item.is_outcome);
          })
        
        br
        br

        div.input-group.mb-3
          div.input-group-prepend
            span.input-group-text ₪
          input(
            type="number"
            id="sum"
            name="sum"
            class="form-control"
            value=data.sum
            aria-describedby="basic-addon1"
          )
        
        label(for="start_month") תחילה:
        input(
          class="monthpicker form-control"
          type="text"
          id="start_month"
          name="start_month"
          value= (data.start_month ? moment(data.start_month).format("MM/YYYY") : "")
        )
        
        label(for="end_month") סוף:
        input(
          class="monthpicker form-control"
          type="text"
          id="end_month"
          name="end_month"
          value= (data.end_month ? moment(data.end_month).format("MM/YYYY") : "")
        )

        script.
          $(function () {
            $('#start_month').monthpicker({changeYear:true, minDate: "-3 Y", maxDate: "+2 Y" });
          });
          $(function () {
            $('#end_month').monthpicker({changeYear:true, minDate: "-3 Y", maxDate: "+2 Y" });
          });
        
        br

        label(for="tags") תגית העסקה:
        input(
          type="text"
          id="tags"
          name="tag"
          class="form-control"
          value=(data._transaction_type ? data._transaction_type._transaction_tag.title : "")
        )

        script.
          var tags_source = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('title'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            remote: {
              url: '/ajax/trans_tags/%QUERY',
              wildcard: '%QUERY'
            }
          });
          tags_source.initialize();

          $('#tags').tagsinput({
            maxTags: 1,
            tagClass: function(item) {
              return "btn btn-info";
            },
            typeaheadjs: {
              name: 'tags_source',
              displayKey: 'title',
              source: tags_source.ttAdapter()
            },
            itemValue: 'title',
            itemText: 'title',
          });
          
          function addItemToTags(item) {
            $("#tags").tagsinput("removeAll");
            $("#tags").tagsinput('add', item);
          }
          
          $(function () {
            !{(data._transaction_type ? "addItemToTags("+JSON.stringify(data._transaction_type._transaction_tag)+")" : "")}
            !{(data._transaction_type ? "toggleIsOutcome("+data._transaction_type.is_outcome+")" : "")}
          });

        br

        button(type="submit", class="btn btn-primary")
          span !{edit ? "עדכן" : "הוספה"}

        script.
          $(document).ready(function() {
            $(window).keydown(function(event){
              if(event.keyCode == 13) {
                event.preventDefault();
                return false;
              }
            });
            });
